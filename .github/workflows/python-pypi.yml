# This workflow will upload a Python Package using Twine when a release is created
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python#publishing-to-package-registries

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by separate terms of service, privacy policy, and support documentation.

name: python-pypi

on:
  release:
    types: [published]
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ["3.8", "3.11"]

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install build pytest
    - name: Install deep learning dependencies
      run: python -m pip install numpy scipy torch torchvision
    - name: Build and Test package
      run: |
        python -m build
        pip install .
        pytest
    - name: Keep record of distribution files
      uses: actions/upload-artifact@v3
      with:
        name: dist
        path: dist/
        if-no-files-found: error


  deploy:

    runs-on: ubuntu-latest
    needs:
      - build
    environment:
      name: pypi
    permissions:
      id-token: write

    steps:
    - name: Include distribution files
      uses: actions/download-artifact@v3
      with:
        name: dist
        path: dist/
    - name: Publish package to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        print-hash: true
